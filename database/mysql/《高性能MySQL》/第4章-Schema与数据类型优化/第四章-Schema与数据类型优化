<!DOCTYPE html>
<html lang="en">

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport">
	
	<!-- title -->
	
	<title>
	
		第四章-Schema与数据类型优化 | 
	 
	Yury&#39;s Blog
	</title>
	
	<!-- keywords,description -->
	 
		<meta name="description" content="blog of usual study" />
	

	<!-- favicon -->
	
	<link rel="shortcut icon" href="/favicon.ico">
	


	<!-- search -->
	<script>
		var searchEngine = "https://www.google.com/search?q=";
		if(typeof searchEngine == "undefined" || searchEngine == null || searchEngine == ""){
			searchEngine = "https://www.google.com/search?q=";
		}
		var homeHost = "";
		if(typeof homeHost == "undefined" || homeHost == null || homeHost == ""){
			homeHost = window.location.host;
		}
	</script>


	
<link rel="stylesheet" href="/css/main.css">

	
<link rel="stylesheet" href="https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.min.css">

	
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.17.1/build/styles/darcula.min.css">

	
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css">


	
<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>

	
<script src="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js"></script>

	
<script src="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.17.1/build/highlight.min.js"></script>

	
<script src="https://cdn.jsdelivr.net/npm/jquery-pjax@2.0.1/jquery.pjax.min.js"></script>

	
<script src="/js/main.js"></script>

	
		
<script src="https://cdn.jsdelivr.net/npm/leancloud-storage/dist/av-min.js"></script>

		
<script src="https://cdn.jsdelivr.net/npm/valine@1.3.10/dist/Valine.min.js"></script>

	
	
<meta name="generator" content="Hexo 5.4.0"><link rel="alternate" href="/atom.xml" title="Yury's Blog" type="application/atom+xml">
</head>

<body>
	<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?3efe99c287df5a1d6f0d02d187e403c1";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>

<header id="header">
    <a id="title" href="/" class="logo">Yury's Blog</a>

	<ul id="menu">
		<li class="menu-item">
			<a href="/about" class="menu-item-link">ABOUT</a>
		</li>
	
		<li class="menu-item">
			<a href="/tags" class="menu-item-link">标签</a>
		</li>
	

	
		<li class="menu-item">
			<a href="/categories" class="menu-item-link">分类</a>
		</li>
	

		<li class="menu-item">
			<a href="https://github.com/yury757" class="menu-item-link" target="_blank">
				<i class="fa fa-github fa-2x"></i>
			</a>
		</li>
	</ul>
</header>

	
<div id="sidebar">
	<button id="sidebar-toggle" class="toggle" ><i class="fa fa-arrow-right " aria-hidden="true"></i></button>
	
	<div id="site-toc">
		<input id="search-input" class="search-input" type="search" placeholder="按回车全站搜索">
		<div id="tree">
			

			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										Git
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										learngit
									</a>
									
							<ul>
								<li class="file">
									<a href="/Git/learngit/learn-git">
										learn-git
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										bigdata
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										clickhouse
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/clickhouse/clickhouse">
										clickhouse
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										hadoop
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/hadoop/hadoop-study">
										hadoop-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										hbase
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/hbase/HBase-study">
										HBase-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										kafka
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/kafka/kafka">
										kafka
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										zookeeper
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/zookeeper/zookeeper-study">
										zookeeper-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										computer-science
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										Computer-Networking
									</a>
									
							<ul>
								<li class="file">
									<a href="/computer-science/Computer-Networking/Computer-Networking">
										Computer-Networking
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
							<ul>
								<li class="file">
									<a href="/computer-science/Computer-Networking/socket">
										socket
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										database
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										mysql
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL中的exists与in的使用
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E4%B8%AD%E7%9A%84exists%E4%B8%8Ein%E7%9A%84%E4%BD%BF%E7%94%A8/MySQL%E4%B8%AD%E7%9A%84exists%E4%B8%8Ein%E7%9A%84%E4%BD%BF%E7%94%A8">
										MySQL中的exists与in的使用
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL备份-Linux版
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E5%A4%87%E4%BB%BD-Linux%E7%89%88/MySQL%E5%A4%87%E4%BB%BD-linux%E7%89%88">
										MySQL备份-linux版
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL日期格式化
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96/MySQL%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96">
										MySQL日期格式化
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL查询执行计划详解-explain
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E8%AF%A6%E8%A7%A3-explain/MySQL%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E8%AF%A6%E8%A7%A3-explain">
										MySQL查询执行计划详解-explain
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL迁移数据目录
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/MySQL%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95">
										MySQL迁移数据目录
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										《高性能MySQL》
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第1章-MySQL架构与历史
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC1%E7%AB%A0-MySQL%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%8E%86%E5%8F%B2/%E7%AC%AC%E4%B8%80%E7%AB%A0-MySQL%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%8E%86%E5%8F%B2">
										第一章-MySQL架构与历史
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第2章-MySQL基准测试
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC2%E7%AB%A0-MySQL%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20MySQL%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95">
										第二章 MySQL基准测试
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第3章-服务器性能剖析
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC3%E7%AB%A0-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E5%89%96%E6%9E%90/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E5%89%96%E6%9E%90">
										第三章-服务器性能剖析
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第4章-Schema与数据类型优化
									</a>
									
							<ul>
								<li class="file active">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC4%E7%AB%A0-Schema%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%BC%98%E5%8C%96/%E7%AC%AC%E5%9B%9B%E7%AB%A0-Schema%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%BC%98%E5%8C%96">
										第四章-Schema与数据类型优化
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第5章-创建高性能的索引
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC5%E7%AB%A0-%E5%88%9B%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%B4%A2%E5%BC%95/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%88%9B%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%B4%A2%E5%BC%95">
										第五章-创建高性能的索引
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										postgresql
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/postgresql/postgresql">
										postgresql
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										java
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										JVM
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/JVM/jvm-1.8">
										jvm-1.8
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										SSM-Build
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/SSM-Build/SSM-Build">
										SSM-Build
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										java_JUC
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/java_JUC/Java_JUC-study">
										Java_JUC-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										java_NIO
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/java_NIO/Java_NIO-study">
										Java_NIO-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="file">
									<a href="/java/java%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE">
										java常用配置
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										mybatis
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/mybatis/mybatis-study">
										mybatis-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										springMVC
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/springMVC/SpringMVC-Study">
										SpringMVC-Study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										springboot
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/springboot/springboot-study">
										springboot-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										spring
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/spring/Spring-study">
										Spring-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="file">
									<a href="/jetbrains%E7%B3%BB%E5%88%97IDE%E6%8E%A8%E8%8D%90%E8%AE%BE%E7%BD%AE">
										jetbrains系列IDE推荐设置
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										linux
									</a>
									
							<ul>
								<li class="file">
									<a href="/linux/linux%E5%91%BD%E4%BB%A4">
										linux命令
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
							<ul>
								<li class="file">
									<a href="/linux/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A2%AB%E6%8C%96%E7%9F%BF%E7%9A%84%E7%BB%8F%E5%8E%86">
										记一次服务器被挖矿的经历
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										operating-support
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										docker
									</a>
									
							<ul>
								<li class="file">
									<a href="/operating-support/docker/docker">
										docker
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										project
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										flink_data_warehouse
									</a>
									
							<ul>
								<li class="file">
									<a href="/project/flink_data_warehouse/flink_data_warehouse">
										flink_data_warehouse
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="file">
									<a href="/%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6%E7%AB%AF%E5%8F%A3%E5%8F%B7">
										常用组件端口号
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
		</div>
	</div>
</div>

	<!-- 引入正文 -->
	<div id="content">
		<h1 id="article-title">

	第四章-Schema与数据类型优化
</h1>
<div class="article-meta">
	
	<span>Yury</span>
	<span>2020-12-01 00:00:00</span>
		<div id="article-categories">
    
		<span>Categories：</span>
            
                
                    <span>
                        <i class="fa fa-folder" aria-hidden="true">
                        <a href="/categories/mysql/">mysql</a>
                        </i>
                      
                    </span>
                
            
    

    
		<span>Tags：</span>
            
    
		</div>

</div>

<div id="article-content">
	<h2 id="4-1-选择优化的数据类型"><a href="#4-1-选择优化的数据类型" class="headerlink" title="4.1 选择优化的数据类型"></a>4.1 选择优化的数据类型</h2><p>1、应该尽量使用可以正确存储存储数据的最小数据类型。如能使用tinyint就不要使用int，能使用varchar(20)，就不要使用varchar(100)。</p>
<p>2、应该尽量使用尽可能简单的数据类型，如日期类型尽量使用date、time、datetime，而不是使用varchar存储日期数据，另外应该使用整形存储IP地址，而不是使用varchar。</p>
<p>3、应该尽量避免null，可以保证不出错的情况下尽量把列指定为not null。<font color="Blue">一方面在于在查询时，如果有null，则需要使用ifnull，而这样的话会使索引失效；</font>另一方面，可为null的列会占用更多的存储空间。</p>
<p>4、int(11)通常是没有意义的；decimal(m,n)中m是指整数部分和小数部分位数之和，n则仅仅指小数部分位数。</p>
<p>5、财务数据建议用decimal存储，可以对小数部分进行精确计算，而在数据量比较大时，可以考虑使用BIGINT代替decimal，并根据需要存储的小数位乘以相应的倍数就行，如需要保留到万分之一，可以将原始数据乘以一百万，再存到bigint里面，因为bigint相比decimal的好处在于计算更精确和计算效率高。<font color="Blue">（但是这种方式要注意使用该金额时可能会出现忘记除掉相应的倍数的情况，个人建议还是使用decimal，更安全）</font></p>
<p>6、varchar和char：</p>
<p><font color="Blue">（1）varchar和char类型消耗的存储空间的字节数由其字符集决定，如使用utf8mb4时，英文字母和数字占用1个字节，而大部分中文占用3个字节，少量特殊字符占用4个字节。使用char_length()和length()可以查看字符串长度和字符串所占用的字节长度。</font></p>
<pre><code class="mysql">mysql&gt; select test1, length(test1), char_length(test1) from test_varchar1;
+--------+---------------+--------------------+
| test1  | length(test1) | char_length(test1) |
+--------+---------------+--------------------+
| abc    |             3 |                  3 |
| 123    |             3 |                  3 |
| 你好啊 |             9 |                  3 |
+--------+---------------+--------------------+
3 rows in set (0.00 sec)
</code></pre>
<p><font color="Blue">（2）varchar(n)是变长，char(n)是定长，即varchar消耗的存储空间是随字符串长度而改变的，char消耗的存储空间是既定的。此外varchar还会消耗1-2个字节存储字符串的长度，而char不会。因此对于存储定长数据，使用char更好，因此不需要额外存储一个字节来保存字符串长度，但在实际业务中这种需求较少，反倒使用enum的都比使用char的多。</font></p>
<p><font color="Blue">（3）char类型会删除末尾的空格再进行存储**<font color="Red">（危！）</font>**，而varchar不会删除末尾空格（实际上在MySQL4.1或更老的版本中varchar也会删末尾空格）。</font></p>
<pre><code class="mysql">mysql&gt; select test2, test3, char_length(test2), char_length(test3), length(test2), length(test3), concat(&#39;(&#39;, test2, &#39;)&#39;), concat(&#39;(&#39;, test3, &#39;)&#39;) from test_varchar2; -- test2为varchar类型，而test3为char类型。
+--------+-------+--------------------+--------------------+---------------+---------------+-------------------------+-------------------------+
| test2  | test3 | char_length(test2) | char_length(test3) | length(test2) | length(test3) | concat(&#39;(&#39;, test2, &#39;)&#39;) | concat(&#39;(&#39;, test3, &#39;)&#39;) |
+--------+-------+--------------------+--------------------+---------------+---------------+-------------------------+-------------------------+
|   ab   |   ab  |                  6 |                  4 |             6 |             4 | (  ab  )                | (  ab)                  |
|   ab   |   ab  |                  6 |                  4 |             6 |             4 | (  ab  )                | (  ab)                  |
+--------+-------+--------------------+--------------------+---------------+---------------+-------------------------+-------------------------+
2 rows in set (0.00 sec)
</code></pre>
<p><font color="Blue">（4）当使用严格的SQL模式时，insert的数据超过varchar和char的最大长度时，都会报错；当启动非严格的SQL模式时，他们则是将超过长度后面的字符删除存储，并予以警告，而不是报错。</font></p>
<p><font color="Blue">（5）最好的策略是根据业务需求选择最适合的类型，只分配真正需要的空间。</font></p>
<p>7、blob与text都是用于存储长度特别长（超过65535个字节）的数据类型，对他们的排序并不是对整个字符串进行排序，都是对其前max_sort_length个字节的字符进行排序，可以手动设置max_sort_length的值，或者使用order by sustring(column, length)。区别在于blob存储的是字符串的二进制，而text存储的是原始字符串。</p>
<p><font color="Red">8、enum类型会将“数字-字符串”映射关系的“查找表”存储于.frm文件中，而数据中只存储“数字”键，这种双重性容易导致混乱，特别是排序的时候，enum排序是使用内部存储的整数进行排序，而不是定义的字符串进行排序。除非使用FIELD()函数自定义排序顺序。列关联时的效率：enum关联enum &gt; varchar关联varchar &gt; enum和varchar互相关联</font></p>
<pre><code class="mysql">mysql&gt; create table `enum1`(column1 enum(&#39;Y&#39;, &#39;M&#39;, &#39;N&#39;));
Query OK, 0 rows affected (0.01 sec)
mysql&gt; insert into enum1 values(&#39;Y&#39;), (&#39;Y&#39;), (&#39;N&#39;), (&#39;M&#39;);
Query OK, 4 rows affected (0.00 sec)

mysql&gt; select column1 from enum1;
+---------+
| column1 |
+---------+
| Y       |
| Y       |
| N       |
| M       |
+---------+
4 rows in set (0.00 sec)

mysql&gt; select column1 + 1 from enum1;
+-------------+
| column1 + 1 |
+-------------+
|           2 |
|           2 |
|           4 |
|           3 |
+-------------+
4 rows in set (0.00 sec)

mysql&gt; select column1 from enum1 order by column1;
+---------+
| column1 |
+---------+
| Y       |
| Y       |
| M       |
| N       |
+---------+
4 rows in set (0.00 sec)

mysql&gt; select column1 from enum1 order by field(column1, &#39;M&#39;, &#39;N&#39;, &#39;Y&#39;);
+---------+
| column1 |
+---------+
| M       |
| N       |
| Y       |
| Y       |
+---------+
4 rows in set (0.00 sec)
</code></pre>
<p>9、datetime和timestamp</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>占用字节数</th>
<th>支持的时间范围</th>
</tr>
</thead>
<tbody><tr>
<td>datetime</td>
<td>8</td>
<td>1000-01-01 00:00:00至9999-12-31 23:59:59</td>
</tr>
<tr>
<td>timestamp</td>
<td>4</td>
<td>1970-01-01 00:00:00至2038-01-19 23:59:59</td>
</tr>
</tbody></table>
<p><font color="Blue">10、标识列（即能唯一标识一条数据的字段）数据类型通常用unsigned int auto_increment或UUID()两种：当该标识列索引使用BTREE（innodb默认使用BTREE）时，使用unsigned int auto_increment更好（io速度更快、存储空间更小等），当标识列索引使用hash索引（innodb不显式支持hash索引，但当支持自适应hash索引，等后面讲）时，两者差不多。</font></p>
<p>11、最好避免使用BIT和SET类型。</p>
<h2 id="4-2-schema设计中的陷阱"><a href="#4-2-schema设计中的陷阱" class="headerlink" title="4.2 schema设计中的陷阱"></a>4.2 schema设计中的陷阱</h2><p>1、避免过多的列和过多的关联</p>
<p>2、避免NULL，或者使用其他值代替NULL</p>
<h2 id="4-3-范式和反范式"><a href="#4-3-范式和反范式" class="headerlink" title="4.3 范式和反范式"></a>4.3 范式和反范式</h2><p>设计方面的东西，详见原文或者参考其他博客，如<a target="_blank" rel="noopener" href="https://www.cnblogs.com/ningskyer/articles/5632017.html">这里</a></p>
<h2 id="4-4-缓存表和汇总表"><a href="#4-4-缓存表和汇总表" class="headerlink" title="4.4 缓存表和汇总表"></a>4.4 缓存表和汇总表</h2><p><strong>缓存表：</strong>表示存储那些可以比较简单的从schema其他表获取（但每次获取速度都比较慢）数据的表（例如，逻辑上冗杂的数据）。</p>
<p><strong>汇总表：</strong>表示存储那些使用group by语句聚合的数据。</p>
<p><font color="Blue">使用缓存表的情况是，比如展示一个很详细的业务数据，要关联很多张表并进行相关运算，每次查询速度都比较慢，则可以将定期查询该SQL并放到一张缓存表中，等需要的时候直接取这张缓存表中的数据即可，然后定时维护这张缓存表以更新数据。这种情况数据虽然有延迟，但对于用户来说能很快的看到数据。</font></p>
<p><font color="Blue">使用汇总表的情况是，比如要看网站最近一个月每天的点击量，则要做group by操作，可以每天定时执行一个的SQL，将当天的点击量记录到这张汇总表中，等需要的时候直接where between就行，不用做group by。</font></p>
<p><strong>物化视图</strong>：预先计算并存储在磁盘上的表，并通过各种策略来<strong>自动</strong>更新该表（视图）。MySQL可以用第三方工具：Justin Swanhart的Flexviews。</p>
<p><font color="Red">计数器表</font>：再比如上面那个网站最近一个月每天的点击量的情况，可以通过定义一张下面所示的表，每次收到用户访问，就随机选一个槽进行更新（避免锁冲突）。再设置一个定时任务，每天将昨天的数据汇总到0号槽，并删除其他槽，这样就是一个统计每一天的访问量的计数器表。</p>
<pre><code class="mysql">CREATE TABLE `daily_click` (
  `day` date NOT NULL,
  `slot` int unsigned NOT NULL,
  `cnt` int DEFAULT 0,
  PRIMARY KEY (`day`,`slot`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

mysql&gt; insert into daily_click values(now(), round(rand(), 2) * 100, 1) on duplicate key update cnt = cnt + 1; -- 我这里执行了六次
Query OK, 1 row affected, 1 warning (0.00 sec)

mysql&gt; select * from daily_click;
+------------+------+------+
| day        | slot | cnt  |
+------------+------+------+
| 2020-11-22 |   22 |    1 |
| 2020-11-22 |   29 |    1 |
| 2020-11-22 |   48 |    1 |
| 2020-11-22 |   53 |    2 |
| 2020-11-22 |   95 |    1 |
+------------+------+------+
5 rows in set (0.00 sec)

mysql&gt; update daily_click as c,
      (select day, sum(cnt) as cnt, min(slot) as slot from daily_click group by day) as x
      set c.cnt = if(c.slot = x.slot, x.cnt, 0),
      c.slot = if(c.slot = x.slot, 0, c.slot)
      where c.day = x.day and c.day = &#39;2020-11-22&#39;;
Query OK, 5 rows affected (0.00 sec)
Rows matched: 5  Changed: 5  Warnings: 0

mysql&gt; delete from daily_click where day = &#39;2020-11-22&#39; and slot &lt;&gt; 0;
Query OK, 4 rows affected (0.00 sec)

mysql&gt; select * from daily_click;
+------------+------+------+
| day        | slot | cnt  |
+------------+------+------+
| 2020-11-22 |    0 |    6 |
+------------+------+------+
1 row in set (0.00 sec)
</code></pre>
<h2 id="4-5-加快ALTER-TABLE的速度"><a href="#4-5-加快ALTER-TABLE的速度" class="headerlink" title="4.5 加快ALTER TABLE的速度"></a>4.5 加快ALTER TABLE的速度</h2><p><font color="Blue">1、修改列的三种方式：</font></p>
<p><font color="Blue">（1）ALTER TABLE tbl_name CHANGE [COLUMN] old_col_name new_col_name column_definition [FIRST | AFTER col_name]：这种方法是整列换成一个新列的定义，包括列名也可以修改，会引起表的重建，即删除旧列，构造新列；</font></p>
<p><font color="Blue">（2）ALTER TABLE tbl_name MODIFY [COLUMN] col_name column_definition [FIRST | AFTER col_name]：这种方法也是整列换成一个新列，但是不能修改表名，只能修改属性，也会引起表的重建；</font></p>
<p><font color="Blue">（3）ALTER TABLE tbl_name ALTER [COLUMN] col_name {SET DEFAULT {literal | (expr)} | DROP DEFAULT}：这种方法局限性很高，只能修改列的默认值属性，这个语句会直接修改表的.frm文件，不涉及表数据，不会引起表的重建，因此速度很快。</font></p>
<p><font color="Blue">即如果是需要修改的东西实际存在于.frm文件中，都可以通过直接修改.frm文件来进行修改，而不用重建表。</font>注意：《高性能MySQL》这本书对用的MySQL版本是8.0以下的版本，MySQL8.0及以后没有.frm文件了，表结构和表数据都在整个.ibd文件的表空间中。以上三种修改，第三种也是最快的，但是只是底层原理上有了较大的变化，详见MySQL官方文档。</p>
<p>2、修改表结构的技巧：</p>
<p>（1）先在一台不提供服务的库上执行alter table操作，然后和提供服务的主库进行切换。<font color="Blue">过程（个人盲猜的）：停止从主备库同步，备用库执行alter table，重新同步主备库，待同步成功再切换主备库。问题：切换主备库会不会导致整个服务器停顿？</font></p>
<p>（2）影子拷贝。建一个新的空表，表结构为原表修改后的表结构，在新表中建三个INSERT UPDATE DELETE的触发器，将旧表数据拷贝到新表，最新数据会通过触发器更新过去，然后通过重命名表和删表的方式交换两张表。</p>

</div>


    <div class="post-guide">
        <div class="item left">
            
              <a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC3%E7%AB%A0-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E5%89%96%E6%9E%90/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E5%89%96%E6%9E%90">
                  <i class="fa fa-angle-left" aria-hidden="true"></i>
                  第三章-服务器性能剖析
              </a>
            
        </div>
        <div class="item right">
            
              <a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC5%E7%AB%A0-%E5%88%9B%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%B4%A2%E5%BC%95/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%88%9B%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%B4%A2%E5%BC%95">
                第五章-创建高性能的索引
                <i class="fa fa-angle-right" aria-hidden="true"></i>
              </a>
            
        </div>
    </div>




<script>
	
	
</script>
	</div>
	<div id="footer">
	<p>
	©2019-<span id="footerYear"></span> 
	
	<br>
	Theme <a href="//github.com/wujun234/hexo-theme-tree" target="_blank">Tree</a>
	Powered by <a href="//hexo.io" target="_blank">Hexo</a>
	</p>
</div>
<script type="text/javascript"> 
	document.getElementById('footerYear').innerHTML = new Date().getFullYear() + '';
</script>
	<button id="totop-toggle" class="toggle"><i class="fa fa-angle-double-up" aria-hidden="true"></i></button>
</body>
</html>