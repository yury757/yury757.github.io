<!DOCTYPE html>
<html lang="en">

<head>
	<meta http-equiv="content-type" content="text/html; charset=utf-8">
	<meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport">
	
	<!-- title -->
	
	<title>
	
		redis命令 | 
	 
	Yury&#39;s Blog
	</title>
	
	<!-- keywords,description -->
	 
		<meta name="description" content="blog of usual study" />
	

	<!-- favicon -->
	
	<link rel="shortcut icon" href="/favicon.ico">
	


	<!-- search -->
	<script>
		var searchEngine = "https://www.google.com/search?q=";
		if(typeof searchEngine == "undefined" || searchEngine == null || searchEngine == ""){
			searchEngine = "https://www.google.com/search?q=";
		}
		var homeHost = "";
		if(typeof homeHost == "undefined" || homeHost == null || homeHost == ""){
			homeHost = window.location.host;
		}
	</script>


	
<link rel="stylesheet" href="/css/main.css">

	
<link rel="stylesheet" href="https://cdn.staticfile.org/font-awesome/4.7.0/css/font-awesome.min.css">

	
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.17.1/build/styles/darcula.min.css">

	
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.css">


	
<script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js"></script>

	
<script src="https://cdn.jsdelivr.net/gh/fancyapps/fancybox@3.5.7/dist/jquery.fancybox.min.js"></script>

	
<script src="https://cdn.jsdelivr.net/gh/highlightjs/cdn-release@9.17.1/build/highlight.min.js"></script>

	
<script src="https://cdn.jsdelivr.net/npm/jquery-pjax@2.0.1/jquery.pjax.min.js"></script>

	
<script src="/js/main.js"></script>

	
		
<script src="https://cdn.jsdelivr.net/npm/leancloud-storage/dist/av-min.js"></script>

		
<script src="https://cdn.jsdelivr.net/npm/valine@1.3.10/dist/Valine.min.js"></script>

	
	
<meta name="generator" content="Hexo 5.4.0"><link rel="alternate" href="/atom.xml" title="Yury's Blog" type="application/atom+xml">
</head>

<body>
	<script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?3efe99c287df5a1d6f0d02d187e403c1";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>

<header id="header">
    <a id="title" href="/" class="logo">Yury's Blog</a>

	<ul id="menu">
		<li class="menu-item">
			<a href="/about" class="menu-item-link">ABOUT</a>
		</li>
	
		<li class="menu-item">
			<a href="/tags" class="menu-item-link">标签</a>
		</li>
	

	
		<li class="menu-item">
			<a href="/categories" class="menu-item-link">分类</a>
		</li>
	

		<li class="menu-item">
			<a href="https://github.com/yury757" class="menu-item-link" target="_blank">
				<i class="fa fa-github fa-2x"></i>
			</a>
		</li>
	</ul>
</header>

	
<div id="sidebar">
	<button id="sidebar-toggle" class="toggle" ><i class="fa fa-arrow-right " aria-hidden="true"></i></button>
	
	<div id="site-toc">
		<input id="search-input" class="search-input" type="search" placeholder="按回车全站搜索">
		<div id="tree">
			

			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										Git
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										learngit
									</a>
									
							<ul>
								<li class="file">
									<a href="/Git/learngit/learn-git">
										learn-git
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										bigdata
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										clickhouse
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/clickhouse/clickhouse">
										clickhouse
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										hadoop
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/hadoop/hadoop-study">
										hadoop-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										hbase
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/hbase/HBase-study">
										HBase-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										kafka
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/kafka/kafka">
										kafka
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										zookeeper
									</a>
									
							<ul>
								<li class="file">
									<a href="/bigdata/zookeeper/zookeeper-study">
										zookeeper-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										computer-science
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										Computer-Networking
									</a>
									
							<ul>
								<li class="file">
									<a href="/computer-science/Computer-Networking/Computer-Networking">
										Computer-Networking
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
							<ul>
								<li class="file">
									<a href="/computer-science/Computer-Networking/socket">
										socket
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										database
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										mysql
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL中的exists与in的使用
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E4%B8%AD%E7%9A%84exists%E4%B8%8Ein%E7%9A%84%E4%BD%BF%E7%94%A8/MySQL%E4%B8%AD%E7%9A%84exists%E4%B8%8Ein%E7%9A%84%E4%BD%BF%E7%94%A8">
										MySQL中的exists与in的使用
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL备份-Linux版
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E5%A4%87%E4%BB%BD-Linux%E7%89%88/MySQL%E5%A4%87%E4%BB%BD-linux%E7%89%88">
										MySQL备份-linux版
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL日期格式化
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96/MySQL%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96">
										MySQL日期格式化
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL查询执行计划详解-explain
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E8%AF%A6%E8%A7%A3-explain/MySQL%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92%E8%AF%A6%E8%A7%A3-explain">
										MySQL查询执行计划详解-explain
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										MySQL迁移数据目录
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/MySQL%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95/MySQL%E8%BF%81%E7%A7%BB%E6%95%B0%E6%8D%AE%E7%9B%AE%E5%BD%95">
										MySQL迁移数据目录
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										《高性能MySQL》
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第1章-MySQL架构与历史
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC1%E7%AB%A0-MySQL%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%8E%86%E5%8F%B2/%E7%AC%AC%E4%B8%80%E7%AB%A0-MySQL%E6%9E%B6%E6%9E%84%E4%B8%8E%E5%8E%86%E5%8F%B2">
										第一章-MySQL架构与历史
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第2章-MySQL基准测试
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC2%E7%AB%A0-MySQL%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/%E7%AC%AC%E4%BA%8C%E7%AB%A0%20MySQL%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95">
										第二章 MySQL基准测试
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第3章-服务器性能剖析
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC3%E7%AB%A0-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E5%89%96%E6%9E%90/%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD%E5%89%96%E6%9E%90">
										第三章-服务器性能剖析
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第4章-Schema与数据类型优化
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC4%E7%AB%A0-Schema%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%BC%98%E5%8C%96/%E7%AC%AC%E5%9B%9B%E7%AB%A0-Schema%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E4%BC%98%E5%8C%96">
										第四章-Schema与数据类型优化
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										第5章-创建高性能的索引
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/mysql/%E3%80%8A%E9%AB%98%E6%80%A7%E8%83%BDMySQL%E3%80%8B/%E7%AC%AC5%E7%AB%A0-%E5%88%9B%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%B4%A2%E5%BC%95/%E7%AC%AC%E4%BA%94%E7%AB%A0-%E5%88%9B%E5%BB%BA%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E7%B4%A2%E5%BC%95">
										第五章-创建高性能的索引
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										postgresql
									</a>
									
							<ul>
								<li class="file">
									<a href="/database/postgresql/postgresql">
										postgresql
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										redis
									</a>
									
							<ul>
								<li class="file active">
									<a href="/database/redis/redis%E5%91%BD%E4%BB%A4">
										redis命令
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										java
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										JVM
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/JVM/jvm-1.8">
										jvm-1.8
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										SSM-Build
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/SSM-Build/SSM-Build">
										SSM-Build
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="file">
									<a href="/java/java-%E6%96%87%E4%BB%B6IO%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%AF%B9%E6%AF%94">
										java-文件IO常用操作对比
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										java_JUC
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/java_JUC/Java_JUC-study">
										Java_JUC-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										java_NIO
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/java_NIO/Java_NIO-study">
										Java_NIO-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="file">
									<a href="/java/java%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE">
										java常用配置
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										mybatis
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/mybatis/mybatis-study">
										mybatis-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										springMVC
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/springMVC/SpringMVC-Study">
										SpringMVC-Study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										springboot
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/springboot/springboot-study">
										springboot-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										spring
									</a>
									
							<ul>
								<li class="file">
									<a href="/java/spring/Spring-study">
										Spring-study
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="file">
									<a href="/jetbrains%E7%B3%BB%E5%88%97IDE%E6%8E%A8%E8%8D%90%E8%AE%BE%E7%BD%AE">
										jetbrains系列IDE推荐设置
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										linux
									</a>
									
							<ul>
								<li class="file">
									<a href="/linux/linux%E5%91%BD%E4%BB%A4">
										linux命令
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
							<ul>
								<li class="file">
									<a href="/linux/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A2%AB%E6%8C%96%E7%9F%BF%E7%9A%84%E7%BB%8F%E5%8E%86">
										记一次服务器被挖矿的经历
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										operating-support
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										docker
									</a>
									
							<ul>
								<li class="file">
									<a href="/operating-support/docker/docker">
										docker
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										project
									</a>
									
							<ul>
								<li class="directory">
									<a href="#" class="directory">
										<i class="fa fa-plus-square-o"></i>
										flink_data_warehouse
									</a>
									
							<ul>
								<li class="file">
									<a href="/project/flink_data_warehouse/flink_data_warehouse">
										flink_data_warehouse
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
								</li>
								
							</ul>
			
								</li>
								
							</ul>
			
							<ul>
								<li class="file">
									<a href="/%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6%E7%AB%AF%E5%8F%A3%E5%8F%B7">
										常用组件端口号
									</a>
								</li>
								<div class="article-toc" style="display: none;"></div>
							</ul>
			
		</div>
	</div>
</div>

	<!-- 引入正文 -->
	<div id="content">
		<h1 id="article-title">

	redis命令
</h1>
<div class="article-meta">
	
	<span>Yury</span>
	<span>2022-05-03 00:00:00</span>
		<div id="article-categories">
    
		<span>Categories：</span>
            
    

    
		<span>Tags：</span>
            
    
		</div>

</div>

<div id="article-content">
	<h2 id="一、ACL"><a href="#一、ACL" class="headerlink" title="一、ACL"></a>一、ACL</h2><pre><code class="shell">ACL &lt;subcommand&gt; [&lt;arg&gt; [value] [opt] ...].     # access control list，访问控制列表，可以结合subcommand子命令形成很多命令组合，主要用于权限访问相关命令。

如：
acl cat [&lt;category&gt;]     # 列举category目录下的所有命令，若未指定category，则列举所有category
acl users                                 # 展示所有用户
acl whoami                                # 展示当前用户
acl deluser &lt;username&gt; [&lt;username&gt; ...]   # 删除用户
acl getuser &lt;username&gt;                    # 获取用户详细信息
acl list                                  # 以配置文件格式展示所有用户详情
acl setuser &lt;username&gt; &lt;attribute&gt; [&lt;attribute&gt; ...]  # 新增或者修改用户属性
acl genpass [&lt;bits&gt;]                      # 生成一个指定位长度（默认256位）的伪随机密码，注意这个长度是位的长度而不是生成的密码的长度
acl load                                  # 从ACL文件中重新加载用户配置文件
acl save                                  # 将当前配置保存在ACL文件中
acl log [&lt;count&gt; | RESET]                 # 展示acl日志入口
acl help                                  # 显示acl命令帮助
</code></pre>
<blockquote>
<p> 1、修改用户权限</p>
</blockquote>
<p><code>acl setuser &lt;username&gt; &lt;attribute&gt; [&lt;attribute&gt; ...]</code></p>
<p>该命令的attribute叫ACL RULE，ACL RULE分为两部分，一部分是命令访问权限相关（<code>Command rules</code>），另一部分是定义了用户状态（<code>User management rules</code>）</p>
<p>完整的使用方式参考：<code>[ACL SETUSER | Redis](https://redis.io/commands/acl-setuser/)</code></p>
<p>命令规则主要有：</p>
<ul>
<li><p><code>~&lt;pattern&gt;</code>：控制用户只能访问符合pattern模式的key</p>
</li>
<li><p><code>allkeys</code>：可以访问所有key，等于<code>~*</code></p>
</li>
<li><p><code>&amp;&lt;pattern&gt;</code>：控制用户只能访问符合pattern模式的发布/订阅channel</p>
</li>
<li><p><code>allchannels</code>：可以访问所有channel，，等于<code>&amp;*</code></p>
</li>
<li><p><code>+&lt;command&gt;</code>：为用户添加一个命令访问权限，即可以访问这个命令</p>
</li>
<li><p><code>-&lt;command&gt;</code>：为用户减少一个命令访问权限，即无法访问这个命令</p>
</li>
<li><p><code>allcommands</code>：用户可以访问所有命令</p>
</li>
<li><p><code>nocommands</code>：移除用户所有命令的访问权限，啥都干不了了</p>
</li>
<li><p><code>+@&lt;category&gt;</code>：为用户添加一个目录的访问权限，该目录下的所有命令都可以访问</p>
</li>
<li><p><code>-@&lt;category&gt;</code>：为用户减少一个目录的访问权限，该目录下的所有命令都无法访问</p>
</li>
</ul>
<p>用户状态规则主要有：</p>
<ul>
<li><code>on</code>：将用户设置为有效</li>
<li><code>off</code>：将用户设置为无效用户</li>
<li><code>&gt;mypassword</code>：为用户新增一个密码，输入方式为可读的明文。redis允许为一个用户设置多个密码</li>
<li><code>#hashedpassword</code>：为用户新增一个密码，输入方式为hash加密后的密文</li>
<li><code>&lt;mypassword</code>：为用户减少一个密码</li>
<li><code>!hashedpassword</code>：为用户减少一个密码，输入方式为hash加密后的密文</li>
<li><code>reset</code>：重置为空用户，即设置为off, without passwords，无法执行任何命令，也无法访问任何key</li>
</ul>
<p>开放权限用+，收回权限用-，对应的权限为<code>acl cat [&lt;category&gt;]</code>列举出来的目录或者命令</p>
<h2 id="二、数据库相关命令"><a href="#二、数据库相关命令" class="headerlink" title="二、数据库相关命令"></a>二、数据库相关命令</h2><pre><code class="shell">select &lt;index&gt;   # 切换数据库
dbsize           # 查看当前数据库的key的数量，O(1)时间复杂度
flushdb &lt;async|sync&gt;   # 清空当前库。默认参数是同步，6.2版本后，可以通过设置lazyfree-lazy-user-flush配置参数为yes，将该命令的默认参数调整为异步。异步清空时，只会删除执行命令的时间点之前的key，在那个时间点之后写入的key不受影响
flushall &lt;async|sync&gt;  # 清空所有库。参数同上。
</code></pre>
<h2 id="三、key相关命令"><a href="#三、key相关命令" class="headerlink" title="三、key相关命令"></a>三、key相关命令</h2><pre><code class="shell">keys &lt;pattern&gt;    # 按照glob pattren，列举所有满足条件的key。
# 注意如果数据量很大，这个速度会很慢，O(N)时间复杂度，生产环境要尤其小心使用
# 在应用程序中应尽量避免使用keys，如果需要搜索key，应该考虑使用scan或者sets
exists &lt;key...&gt; [&lt;key&gt;...]   # 判断key...是否存在，返回值是存在的key的数量
type &lt;key&gt;                   # 查看key对应的value的类型
del &lt;key...&gt; [&lt;key&gt;...]      # 直接删除一个key，阻塞删除
unlink &lt;key...&gt; [&lt;key&gt;...]   # 从keyspace删除一个key，然后会在另一个线程异步删除实际内存中的key，非阻塞删除
expire &lt;key&gt; &lt;second&gt;        # 给key设置过期时间，单位秒
ttl &lt;key&gt;                    # 查看key的剩余过期时间，返回-1表示永不过期，返回-2表示已经过期了
</code></pre>
<h2 id="四、常用数据类型"><a href="#四、常用数据类型" class="headerlink" title="四、常用数据类型"></a>四、常用数据类型</h2><h3 id="1、String"><a href="#1、String" class="headerlink" title="1、String"></a>1、String</h3><p><strong>（1）数据结构</strong></p>
<p>String底层是安全的二进制形式，这样String可以包含所有类型的数据。</p>
<p>String使用的数据结构叫<strong>简单动态字符串</strong>，相当于java的<code>List&lt;Character&gt;</code>。</p>
<p>String最大512兆个字节，对于ascii字符，一个字符占用一个字节，512兆就是也可以代表长度，但是对于中文，一个unicode中文字符占用3个字节，因此若包含非ascii字符，则最大长度小于512兆。</p>
<p><strong>（2）常用命令</strong></p>
<pre><code class="shell">set &lt;key&gt; &lt;value&gt;
get &lt;key&gt;
append &lt;key&gt; &lt;value&gt;
strlen &lt;key&gt;
setnx &lt;key&gt; &lt;value&gt;       # 重要！！只有在key不存在时，才设置成功，否则设置失败。多用于分布式锁

# 数值型字符串操作
incr &lt;key&gt;                # 使数字值增加1
decr &lt;key&gt;                # 使数字值减小1
incrby &lt;key&gt; &lt;increment&gt;  # 使数字值增加increment
decrby &lt;key&gt; &lt;increment&gt;  # 使数字值减小increment
# 由于redis是单线程存取，没有并发问题，因此这些命令本身就是原子性操作。

# 批量操作，可以批量设置key以及获取key
mset &lt;key&gt; &lt;value&gt; [&lt;key&gt; &lt;value&gt; ...]
mget &lt;key&gt; [&lt;key&gt; ...]                        # 返回结果按照get的顺序展示
msetnx &lt;key&gt; &lt;value&gt; [&lt;key&gt; &lt;value&gt; ...]      # 注意！！该命令是原子操作，只要有一个key存在则全部失败。

# range操作
getrange &lt;key&gt; &lt;start&gt; &lt;end&gt;                  # 获取字符串中[start, end]区间内的字符
setrange &lt;key&gt; &lt;offset&gt; &lt;value&gt;               # 从offset下标开始设置value

# 带货期时间的set
setex &lt;key&gt; &lt;second&gt; &lt;value&gt;

# get原值并set新值
getset &lt;key&gt; &lt;value&gt;       # set新值，并返回原先的值
</code></pre>
<h3 id="2、List"><a href="#2、List" class="headerlink" title="2、List"></a>2、List</h3><p><strong>（1）数据结构</strong></p>
<p>redis的List列表是<strong>双向链表</strong>，底层数据结构用<strong>压缩列表+链表</strong>实现，表现形式相当于java的<code>LinkedList&lt;String&gt;</code>。</p>
<p>两边存取的时间复杂度为O(1)，随机访问的时间复杂度为O(N)。</p>
<p>当list中没有任何元素时，key也会被移除。</p>
<p>List常用于获取最新数据、或者最近信息的业务场景，比如获取最近10条短信，获取最新资讯等等。</p>
<p><strong>（2）常用命令</strong></p>
<pre><code class="shell"># 获取长度，时间复杂度O(1)。若key不存在则返回0，若key不是list，则报错
llen &lt;key&gt;

# l表示从左边按顺序操作，r表示从右边按顺序操作
lpush/rpush &lt;key&gt; &lt;element&gt; [&lt;element&gt;...]    # 将元素push到列表中
lrange/rrange &lt;key&gt; &lt;start&gt; &lt;stop&gt;            # 获取列表中[start, stop]区间内的元素，stop若为-1表示所有
lpop/rpop &lt;key&gt; [count]                       # 移除count（默认值1）个数量的元素并按顺序返回这些元素
blpop/brpop &lt;key&gt; [&lt;key&gt;...] &lt;timeout&gt;        # 阻塞式地取出一个元素，直到超时或者元素出现。当timeout为0时，永久等待

# rpoplpush，当需要将一个list按顺序移动到另外一个list上时，可以循环这么操作
rpoplpush &lt;source&gt; &lt;destination&gt;              # 对source执行rpop，并将取出来的元素对destination执行lpush

# 这里的l代表list，而不是left
lindex &lt;key&gt; &lt;index&gt;                          # 从左边根据下标index获取对应元素
lset &lt;key&gt; &lt;index&gt; &lt;value&gt;                    # 从左边将下标为index的元素替换成value
lrem &lt;key&gt; &lt;count&gt; &lt;element&gt;                  # 从左边移除count个element元素
ltrim &lt;key&gt; &lt;start&gt; &lt;stop&gt;                    # 从左到右，只保留[start, stop]区间内的元素
linsert &lt;key&gt; &lt;before/after&gt; &lt;pivot&gt; &lt;element&gt; # 从左边在扫描到的第一个pivot元素前面或后面插入element元素
</code></pre>
<h3 id="3、Set"><a href="#3、Set" class="headerlink" title="3、Set"></a>3、Set</h3><p><strong>（1）数据结构</strong></p>
<p>redis的Set就是一个哈希表，底层数据结构叫<strong>字典</strong>，相当于java的<code>HashSet&lt;String&gt;</code>。</p>
<p><strong>（2）常用命令</strong></p>
<pre><code class="shell">sadd &lt;key&gt; &lt;member&gt; [&lt;member&gt;...]
smembers &lt;key&gt;                          # 获取set中的所有元素，返回顺序可能不是插入顺序
sismember &lt;key&gt; &lt;member&gt;                # 判断member是否存在于集合中
scard &lt;key&gt;                             # 获取集合中元素数量
srem &lt;key&gt; &lt;member&gt;  [&lt;member&gt;...]      # 删除指定元素

spop &lt;key&gt; [count]                      # 随机删除count个元素，并返回这些元素
srandmember &lt;key&gt; [count]               # 随机取出count个元素

smove &lt;key&gt; &lt;source&gt; &lt;destination&gt; &lt;member&gt; # 将元素member从source移动到destination集合中

sinter &lt;key&gt; [&lt;key&gt;...]                 # 取所有集合的交集，若只给定一个参数，则返回所有元素
sunion &lt;key&gt; [&lt;key&gt;...]                 # 取所有集合的并集，若只给定一个参数，则返回所有元素
sdiff &lt;key1&gt; [&lt;keyn&gt;...]                # 取key1中不存在于keyn里面的元素，若只给定一个参数，则返回所有元素
</code></pre>
<h3 id="4、Hash"><a href="#4、Hash" class="headerlink" title="4、Hash"></a>4、Hash</h3><p><strong>（1）数据结构</strong></p>
<p>redis的Hash是一个哈希表，即value本身又是一个哈希表，相当于Java的<code>HashMap&lt;String, String&gt;</code>。数据结构为<strong>压缩列表</strong>和<strong>哈希表</strong>两种，当数量小时用压缩列表，当数量大时用哈希表。</p>
<p><strong>（2）常用命令</strong></p>
<pre><code class="shell">hset &lt;key&gt; &lt;field&gt; &lt;value&gt; [&lt;field&gt; &lt;value&gt;...]      # 等于hmset，hmset已经被弃用
hget &lt;key&gt; &lt;field&gt; [&lt;field&gt;...]                      # 等于hmget，hmget已经被弃用
hexists
hkeys
hvals

# 重要操作
hincrby &lt;key&gt; &lt;field&gt; &lt;increment&gt;             # 给field增加increment
hsetnx &lt;key&gt; &lt;field&gt; &lt;value&gt;                  # 只有field不存在时才set成功，否则set失败
</code></pre>
<h3 id="5、Zset"><a href="#5、Zset" class="headerlink" title="5、Zset"></a>5、Zset</h3><p><strong>（1）数据结构</strong></p>
<p>Zset是指有序集合，即按照一定评分（score）排序后的Set，即Sorted Set。使用的数据结构是<strong>哈希表结合跳跃表</strong>，在哈希表中，field是对应的member，而value是对应的score，然后在此基础上建立一层跳跃表。</p>
<p>Zset常用于需要排序的业务场景，如获取热度前十的新闻等。</p>
<p><strong>（2）常用命令</strong></p>
<pre><code class="shell">zadd &lt;key&gt; &lt;score&gt; &lt;member&gt; [&lt;score&gt; &lt;member&gt;...]
zrange &lt;key&gt; &lt;min&gt; &lt;max&gt; [withscores]           # 获取排序在[min, max]区间内的元素
zrangebyscore &lt;key&gt; &lt;min&gt; &lt;max&gt; [withscores]    # 获取score在[min, max]区间内的元素
zount &lt;key&gt; &lt;min&gt; &lt;max&gt;                         # 统计score在[min, max]区间内的元素数量
zrank &lt;key&gt; &lt;member&gt;                            # 获取member的排名，若score相同，则按照写入顺序获取排名

zrevrange &lt;key&gt; &lt;start&gt; &lt;stop&gt;                  # 反向，从大到小获取排序在[start, stop]区间内的元素
zrevrangebyscore &lt;key&gt; &lt;max&gt; &lt;min&gt; [withscores] # 反向，从大到小获取score在[min, max]区间内的元素

zincrby &lt;key&gt; &lt;increment&gt; &lt;member&gt;              # 给member的score加上increment，自动重新排序
zrem &lt;key&gt; &lt;member&gt; [&lt;member&gt;...]               # 删除member
</code></pre>
<h3 id="6、Bitmaps"><a href="#6、Bitmaps" class="headerlink" title="6、Bitmaps"></a>6、Bitmaps</h3><p><strong>（1）数据结构</strong></p>
<p>Bitmaps位图，即只有0和1的一个数组，类似于java的<code>boolean[]</code>。c++的select底层就使用了bitmaps作为socket的存储结构。redis的bitmaps通过一个<strong>数字型字符串的位操作</strong>来实现，通过偏移量（偏移量从1开始）表示元素的位置。</p>
<p>之前说过String的最大大小为512MB，因此这里存储位时最多可以存储512MB*8个位。</p>
<p>bitmaps适用于只需要<strong>是/否</strong>两种值的业务场景，如用户是否是活跃用户，用户是否拥有某个功能的权限等。</p>
<p><strong>（2）常用命令</strong></p>
<pre><code class="shell">setbit &lt;key&gt; &lt;offset&gt; &lt;value&gt;
getbit &lt;key&gt; &lt;offset&gt;
bitcount &lt;key&gt; [&lt;start&gt; &lt;end&gt; &lt;bit/byte&gt;]      # 按位或按字节统计为1的位的数量

bitop &lt;operation&gt; &lt;destkey&gt; &lt;srckey&gt; [&lt;srckey&gt;...] # 按位操作，将结果写入destkey，因此这个destkey最好是不存在的新key
# 位操作：and按位与，or按位或，xor按位异或，not按位取反
# 其中当使用not时，srckey只能用一个
</code></pre>
<h3 id="7、HyperLogLog"><a href="#7、HyperLogLog" class="headerlink" title="7、HyperLogLog"></a>7、HyperLogLog</h3><p><strong>（1）数据结构</strong></p>
<p>HyperLogLog是用于基数计数的一种数据类型。基数计数是指统计集合中不重复元素的数量。</p>
<p>HyperLogLog数据类型使用**HyperLogLog Counting(HLL)**实现，只做基数计算，不会保存元数据。采用稀疏矩阵存储，空间占用很小，仅仅在计数基数个数慢慢变大，稀疏矩阵占用空间渐渐超过了阈值时才会一次性转变成稠密矩阵，转变成稠密矩阵之后最高占用12K的内存空间。即每个HyperLogLog的key最高占用12K。</p>
<p>两个缺点：使用概率算法计算，存在标准误差；不保存原始数据，对需要使用原始数据的场景不友好。</p>
<p><strong>（2）命令</strong></p>
<pre><code class="shell">pfadd &lt;key&gt; &lt;element&gt; [&lt;element&gt;...]
pfcount &lt;key&gt; [&lt;key&gt;...]                  # 统计基数计数
pfmerge &lt;destkey&gt; &lt;srckey&gt; [&lt;srckey&gt;...]  # 将srckey全部合并到新的destkey中
</code></pre>
<h3 id="8、Geospecial-indexes"><a href="#8、Geospecial-indexes" class="headerlink" title="8、Geospecial indexes"></a>8、Geospecial indexes</h3><p><strong>（1）数据结构</strong></p>
<p>Geospecial是基于地理位置索引的一种数据类型。</p>
<p><strong>（2）命令</strong></p>
<pre><code class="shell">geoadd &lt;key&gt; &lt;longitude&gt; &lt;latitude&gt; &lt;member&gt;   # 添加一个元素的地理位置
geopos &lt;key&gt; &lt;member&gt;                          # 获取某个元素的地理位置
geodist &lt;key&gt; &lt;member1&gt; &lt;member2&gt; [m|km|ft|mi] # 获取两个元素之间地理位置的直线距离，后面那个参数表示单位，默认是米

# 以longitude、latitude为中心，radius为半径，找出这个范围内的元素，并做一些其他统计操作
georadius &lt;key&gt; &lt;longitude&gt; &lt;latitude&gt; radius m|km|ft|mi [withcrood] [withdist] [withhash] [count count [any]] [asc|desc] [store key] [storedist key]
</code></pre>
<h2 id="五、发布订阅"><a href="#五、发布订阅" class="headerlink" title="五、发布订阅"></a>五、发布订阅</h2><p>redis支持发布订阅（publish/subscribe）的消息通信模式。</p>
<p>类似于不支持历史消息、不能持久化的kafka，就像收音机，从打开的那一时刻开始接收后面的消息，前面的历史消息没有了。</p>
<p>命令：</p>
<pre><code class="shell"># 发布者
publish &lt;channel&gt; &lt;message&gt;          # 向一个频道发布消息

# 订阅者
subscribe &lt;channel&gt; [&lt;channel&gt;...]   # 打开某个频道，接收后续消息
</code></pre>
<h2 id="六、Jedis"><a href="#六、Jedis" class="headerlink" title="六、Jedis"></a>六、Jedis</h2><p>jedis基本是完全模拟redis-cli的命令实现的java端的redis客户端。其方法和redis-cli命令基本一致。</p>
<p>注意点：</p>
<p>1、jedis客户端是线程不安全的，意味着如果有多个线程通过同一个jedis客户端访问时，会出现socket和IO流方面的异常。因为在jedis底层一个jedis对象代表一个socket和一个IO流，多个线程使用同一个jedis代表多个线程使用同一个socket和同一个IO流，肯定会出现异常。因此应该使用<code>JedisPool</code>或<code>lettuce</code>。</p>
<h2 id="七、事务"><a href="#七、事务" class="headerlink" title="七、事务"></a>七、事务</h2><p>redis的事务是一个单独的隔离操作：事务中的所有命令都会被序列化，按顺序地执行，在执行过程中不会被其他命令打断。主要用处是将多个命令串联在一起，防止被别的命令插队修改数据导致无法实现预期的操作。</p>
<p>类似于将多个命令按顺序打包成一个命令。</p>
<pre><code class="shell"># redis-cli命令如下
multi      # 开启事务，开启后该客户端发送给服务器的命令会按顺序被打包起来，并不直接执行
exec       # 执行事务，将打包的命令依次执行，执行期间其他任何命令都会被阻塞
discard    # 抛弃事务，主动抛弃所有打包的命令
</code></pre>
<pre><code class="java">// java代码如下
    public static void test1() &#123;
        Jedis jedis = getJedis();
        Transaction multi = jedis.multi();
        try &#123;
            multi.set(&quot;k1&quot;, &quot;v1&quot;);
            // int a = 1 / 0;
            multi.set(&quot;k2&quot;, &quot;v2&quot;);
            System.out.println(&quot;all command queued&quot;);
            multi.setnx(&quot;k1&quot;, &quot;v1&quot;);
            System.out.println(&quot;execute queued command&quot;);
            List&lt;Object&gt; results = multi.exec();
            System.out.println(results);
        &#125;catch (Exception ex) &#123;
            ex.printStackTrace();
            try &#123;
                multi.discard();
            &#125;catch (Exception ignored) &#123; &#125;
            System.out.println(&quot;all command discarded&quot;);
        &#125;
    &#125;
</code></pre>
<p>出现异常时的几种情况：</p>
<p>1、multi后打包命令时出现异常（相当于编译时异常）：multi会自动结束，相当于手动调用了discard命令</p>
<p>2、exec执行中某个命令异常（相当于运行时异常）：出现异常的命令返回对应的异常值，不影响其他命令的执行。这一点和关系型数据库的事务差别很大，如在postgres中，在默认事务隔离级别下，事务在执行过程中若出现异常，后续语句都会被忽略，整个事务会自动回滚。</p>

</div>


    <div class="post-guide">
        <div class="item left">
            
        </div>
        <div class="item right">
            
              <a href="/java/java-%E6%96%87%E4%BB%B6IO%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E5%AF%B9%E6%AF%94">
                
                <i class="fa fa-angle-right" aria-hidden="true"></i>
              </a>
            
        </div>
    </div>




<script>
	
	
</script>
	</div>
	<div id="footer">
	<p>
	©2019-<span id="footerYear"></span> 
	
	<br>
	Theme <a href="//github.com/wujun234/hexo-theme-tree" target="_blank">Tree</a>
	Powered by <a href="//hexo.io" target="_blank">Hexo</a>
	</p>
</div>
<script type="text/javascript"> 
	document.getElementById('footerYear').innerHTML = new Date().getFullYear() + '';
</script>
	<button id="totop-toggle" class="toggle"><i class="fa fa-angle-double-up" aria-hidden="true"></i></button>
</body>
</html>